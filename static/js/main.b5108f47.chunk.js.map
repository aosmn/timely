{"version":3,"sources":["Components/Tutorial/TutorialComponent.js","Components/DurationSelector.js","Helpers/TimerHelpers.js","Components/EntriesList/EntryItem.js","Components/EntriesList/EntriesList.js","Components/Timer.js","Components/App.js","serviceWorker.js","index.js"],"names":["TutorialComponent","props","handleJoyrideCallback","data","status","STATUS","FINISHED","SKIPPED","includes","window","localStorage","setItem","state","stepIndex","steps","target","content","console","log","this","setState","runTutorial","getItem","continuous","callback","disableOverlayClose","showProgress","showSkipButton","Component","DurationSelector","context","onChangeText","e","value","values","split","seconds","parseInt","pop","minutes","hours","duration","splitDuration","regexp","test","endTime","moment","startTime","add","_d","onChange","onBlur","padZero","durationInSeconds","durationInMinutes","getDuration","diff","onChangeStartTime","date","onChangeEndTime","saveDuration","n","String","slice","entry","Date","onCancel","className","trigger","type","id","position","on","close","disableClock","calendarIcon","clearIcon","maxDetail","maxDate","subtract","minDate","onClick","EntryItem","handleDeleteEntry","handleEditEntry","useState","title","setTitle","setStartTime","setEndTime","setSeconds","setMinutes","setHours","isEditTitle","setIsEditTitle","isEditDuration","setIsEditDuration","titleInput","useEffect","focus","key","placeholder","onKeyUp","which","update","data-id","ref","input","format","milliSeconds","confirm","dataset","EntriesList","entries","length","entriesList","map","role","Timer","db","setMilliSeconds","isActive","setIsActive","isStarted","setIsStarted","setEntries","reset","fromStop","interval","setInterval","clearInterval","version","stores","timeEntries","toCollection","sortBy","then","save","uuidv4","createdAt","put","newList","disabled","table","delete","filter","updatedAt","entryToUpdate","find","Object","assign","App","href","src","process","height","alt","loading","Dexie","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b5108f47.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Joyride, { STATUS } from 'react-joyride';\n\nexport default class TutorialComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // runTutorial: false,\n      stepIndex: 0,\n      steps: [\n        {\n          target: '.step-0',\n          content: 'Timely is a time logging app. Let\\'s get productive!',\n        },\n        {\n          target: '.step-1',\n          content: 'Enter the title of the task you\\'re currently working on',\n        },\n        {\n          target: '.step-2',\n          content: 'Start the timer',\n        },\n        {\n          target: '.step-3',\n          content: 'Stop the timer',\n        },\n        {\n          target: '.step-4',\n          content: 'Timer duration is shown here',\n        },\n        {\n          target: '.step-5',\n          content: 'Your time entries will be shown here',\n        },\n      ]\n    };\n  }\n  componentDidMount() {\n    console.log('here');\n    this.setState({runTutorial: true})\n  }\n\n  handleJoyrideCallback = data => {\n    const { status } = data;\n    if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n      window.localStorage.setItem('timelyTutorialDone', true)\n    }\n  };\n  render() {\n    const { steps } = this.state;\n    return window.localStorage.getItem('timelyTutorialDone') ? null :\n    <Joyride\n      steps={steps}\n      continuous={true}\n      callback={this.handleJoyrideCallback}\n      disableOverlayClose={true}\n      showProgress={true}\n      showSkipButton={true}\n      // scrollToFirstStep={true}\n      // run={runTutorial}\n      // stepIndex={stepIndex}\n      // spotlightClicks={true}\n    />\n  }\n}\n","import React, { Component } from 'react';\nimport '../styles/popup.scss';\nimport Popup from 'reactjs-popup';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\n\nclass DurationSelector extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      startTime: props.entry.startTime || new Date(),\n      endTime: props.entry.endTime || new Date(),\n      regexp : /^[0-9:\\b]+$/,\n      seconds: props.entry.seconds,\n      minutes: props.entry.minutes,\n      hours: props.entry.hours,\n      duration: `${this.padZero(props.entry.hours)}:${this.padZero(props.entry.minutes)}:${this.padZero(props.entry.seconds)}`\n    }\n  }\n\n  onChangeText = (e) => {\n\n    const value = e.target.value;\n    const values = value.split(':')\n    // const id = e.target.id;\n    const seconds = parseInt(values.pop(), 10) || 0;\n    const minutes = parseInt(values.pop(), 10) || 0;\n    const hours = parseInt(values.pop(), 10) || 0;\n    let duration = hours*60*60 + minutes*60 + seconds;\n    \n    console.log(hours, minutes, seconds);\n\n    duration = this.splitDuration(duration);\n    // if ((id === 'seconds' || id === 'minutes') && parseInt(value) > 59) {\n    //   value = 59\n    // }\n    if (value === '' || this.state.regexp.test(value)) {\n      this.setState({ \n        duration: value,\n        hours: duration.hours,\n        minutes: duration.minutes,\n        seconds: duration.seconds,\n        endTime: moment(this.state.startTime).add(duration, 'seconds')._d\n      }, () => {\n        this.props.onChange({\n          seconds: this.state.seconds,\n          minutes: this.state.minutes,\n          hours: this.state.hours,\n          startTime: this.state.startTime,\n          endTime: this.state.startTime\n        })\n\n      })\n    }\n    // this.setState(value)\n  }\n\n  onBlur = e => {\n    const value = e.target.value;\n    const values = value.split(':')\n    // const id = e.target.id;\n    const seconds = parseInt(values.pop(), 10) || 0;\n    const minutes = parseInt(values.pop(), 10) || 0;\n    const hours = parseInt(values.pop(), 10) || 0;\n    let duration = hours*60*60 + minutes*60 + seconds;\n    \n    console.log(hours, minutes, seconds);\n\n    duration = this.splitDuration(duration);\n    // if ((id === 'seconds' || id === 'minutes') && parseInt(value) > 59) {\n    //   value = 59\n    // }\n    if (value === '' || this.state.regexp.test(value)) {\n      this.setState({ \n        duration: `${this.padZero(duration.hours)}:${this.padZero(duration.minutes)}:${this.padZero(duration.seconds)}`,\n      });\n    }\n  }\n\n  splitDuration = (durationInSeconds) => {\n    const seconds = durationInSeconds%60;\n    const durationInMinutes = (durationInSeconds-seconds)/60;\n    const minutes = durationInMinutes%60;\n    const hours = (durationInMinutes-minutes)/60;\n\n    return {seconds, minutes, hours};\n  }\n  \n  getDuration = (startTime, endTime) => {    \n    const duration = moment(endTime).diff(moment(startTime), 'seconds');\n    \n    // const seconds = duration%60;\n    // const durationInMinutes = (duration-seconds)/60;\n    // const minutes = durationInMinutes%60;\n    // const hours = (durationInMinutes-minutes)/60;\n    const {hours, minutes, seconds} = this.splitDuration(duration);\n    this.setState({\n      seconds,\n      minutes,\n      hours,\n      duration: `${this.padZero(hours)}:${this.padZero(minutes)}:${this.padZero(seconds)}`\n\n    }, () => {\n        this.props.onChange({\n          seconds: this.state.seconds,\n          minutes: this.state.minutes,\n          hours: this.state.hours,\n          startTime: this.state.startTime,\n          endTime: this.state.endTime\n        })\n\n      })\n\n    // let hours = Math.floor(duration / (60*60));\n    // let minutes = duration - \n\n  }\n\n  onChangeStartTime = (date) => {\n    this.setState({startTime: date})\n    this.getDuration(date, this.state.endTime)\n  }\n\n  onChangeEndTime = (date) => {\n    this.setState({endTime: date})\n    this.getDuration(this.state.startTime, date)\n  }\n\n  saveDuration = () => {\n    this.props.saveDuration({\n      seconds: this.state.seconds,\n      minutes: this.state.minutes,\n      hours: this.state.hours,\n      startTime: this.state.startTime,\n      endTime: this.state.endTime\n    });\n  }\n  \n  padZero = (n) => {\n    return String('00' + n).slice(-2);\n  }\n  render() {\n    const { onCancel } = this.props;\n\n    return (\n          <div className='duration-picker-container d-flex align-items-center'>\n            <div className='form-group d-flex flex-row align-items-center mb-0'>\n            <Popup\n              trigger = {\n                <input\n                  type='text'\n                  className='form-control time-input-part'\n                  id='duration'\n                  value={this.state.duration}\n                  onChange={this.onChangeText}\n                  onBlur={this.onBlur}\n                  />\n\n              }\n              position='bottom center'\n              on='focus'\n              >\n              {close => (\n                <div className='d-flex'>\n                  <div className='d-flex flex-column'>\n                    <label className='text-secondary text-left'><small>From</small></label>\n                    <DateTimePicker\n                      onChange={this.onChangeStartTime}\n                      value={this.state.startTime}\n                      disableClock={true}\n                      calendarIcon={null}\n                      clearIcon={null}\n                      maxDetail='second'\n                      maxDate={moment(this.state.endTime).subtract({seconds: 1})._d}\n                      className='mr-3'\n                    />\n                  </div>\n                  <div className='d-flex flex-column'>\n                    <label className='text-secondary text-left'><small>To</small></label>\n                  \n                  <DateTimePicker\n                    onChange={this.onChangeEndTime}\n                    value={this.state.endTime}\n                    disableClock={true}\n                    calendarIcon={null}\n                    clearIcon={null}\n                    maxDetail='second'\n                    minDate={moment(this.state.startTime).add({seconds: 1})._d}\n                  />\n                </div>\n                </div>\n              )}\n            </Popup>\n            </div>\n            <button className='btn btn-secondary d-flex px-2 ml-2' onClick={this.saveDuration}>\n              <i className='material-icons-round'>\n                save\n              </i>\n            </button>\n            <button className='btn btn-link text-dark d-flex p-0' onClick={onCancel}>\n              <i className='material-icons-round'>\n                close\n              </i>\n            </button>\n          </div>\n      \n    );\n  }\n}\n\nexport default DurationSelector;","export const padZero = (n) => {\n  return String('00' + n).slice(-2);\n}","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport Duration from '../DurationSelector';\nimport {padZero} from '../../Helpers/TimerHelpers'\n\nexport default function EntryItem({entry, handleDeleteEntry, handleEditEntry}) {\n  const [title, setTitle] = useState(entry.title);\n  const [startTime, setStartTime] = useState(entry.startTime);\n  const [endTime, setEndTime] = useState(entry.endTime);\n  const [, setSeconds] = useState(entry.seconds);\n  const [, setMinutes] = useState(entry.minutes);\n  const [, setHours] = useState(entry.hours);\n  const [isEditTitle, setIsEditTitle] = useState(false);\n  const [isEditDuration, setIsEditDuration] = useState(false);\n\n  let titleInput = null;\n  // let startTimeInput = null;\n  // let endTimeInput = null;\n  // const [whichEntry, setWhichEntry] = useState('');\n\n  const deleteEntry = (e) => {  \n    const result = window.confirm('Are you sure you want to delete this entry?');\n    if (result) {\n      handleDeleteEntry(e.target.dataset.id);\n      \n    }\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value);\n  }\n\n  const onClickTitle = (e) => {\n    setIsEditTitle(true)\n    // setWhichEntry(e.target.dataset.id)\n  }\n\n  const onBlurTitle = (e) => {\n    setIsEditTitle(false);\n    let update = { title: e.target.value };\n\n    handleEditEntry(entry.id, update)\n    titleInput = null;\n    \n  }\n\n  useEffect(() => {   \n    if (titleInput) {\n      titleInput.focus();\n    }\n  }, [titleInput, isEditTitle]);\n\n  const onKeyUp = (e) => {\n    if (e.which === 13) {\n      setIsEditTitle(false);\n      let update = { title: e.target.value };\n      handleEditEntry(entry.id, update)\n      titleInput = null;\n    }    \n  }\n\n  // const onChangeStartTime = (date) => {\n  //   setStartTime(date)\n  // }\n\n  // const onChangeEndTime = (date) => {\n  //   setEndTime(date)\n  // }\n\n  const onClickDuration = (e) => {\n    setIsEditDuration(true);\n  }\n  const saveDuration = (value) => {\n    setIsEditDuration(false);    \n    handleEditEntry(entry.id, { seconds: value.seconds, minutes: value.minutes, hours: value.hours, startTime: value.startTime, endTime: value.endTime })\n  }\n  const changeDuration = (value) => {\n    const {seconds, minutes, hours, startTime, endTime} = value;\n    setSeconds(seconds);\n    setMinutes(minutes);\n    setHours(hours);\n    setStartTime(startTime);\n    setEndTime(endTime);\n  }\n  return (\n    <li key={entry.id} className='list-group-item list-group-item-action d-flex justify-content-between align-items-center'>\n      <div className='d-flex'>\n        {isEditTitle ? \n          <div className='form-group mb-0'>\n            <input type='text' className='form-control' id='entryTitle' placeholder='No title' value={title} \n            onChange={onChangeTitle}\n            onKeyUp={onKeyUp}\n            onBlur={onBlurTitle}\n            data-id={entry.id}\n            ref={(input) => { titleInput = input; }} />\n          </div>\n        : \n          (\n            <div onClick={onClickTitle}>\n              {entry.title || 'No title'}\n              <small className='ml-3'>{moment(startTime).format('ddd MMM D, hh:mm:ssa')} - {moment(endTime).format('ddd MMM D, hh:mm:ssa')}</small>\n            </div>\n          )\n        }\n      </div>\n      <div className='d-flex flex-row align-items-center'>\n        <div className='duration d-flex align-items-center'>\n          {isEditDuration ? \n            <>\n              <Duration entry={entry} onChange={changeDuration} saveDuration={saveDuration} onCancel={() => {setIsEditDuration(false)}}/>\n            </>\n          \n          :\n          <small className='text-secondary mr-3' onClick={onClickDuration}>\n            {padZero(entry.hours)}:{padZero(entry.minutes)}:{padZero(entry.seconds)}.{padZero(entry.milliSeconds)}\n          </small>\n          }\n        </div>\n        <button className='btn btn-danger d-flex align-items-center' onClick={deleteEntry} data-id={entry.id}>\n          <i className='material-icons-round' data-id={entry.id}>\n            delete\n          </i>\n        </button>\n      </div>\n    </li>\n  )\n};","import React from 'react';\nimport EntryItem from './EntryItem'\n\nexport default function EntriesList({ entries, handleDeleteEntry, handleEditEntry }) {\n  const padZero = (n) => {\n    return String('00' + n).slice(-2);\n  }\n\n  if (entries && entries.length > 0) {\n    \n    const entriesList = entries.map(entry => {    \n      return <EntryItem key={entry.id} padZero={padZero} entry={entry} handleDeleteEntry={handleDeleteEntry} handleEditEntry={handleEditEntry}/>\n    })\n\n    return (\n      <ul className='list-group col-12 pr-0 step-5 '>\n        {entriesList}\n      </ul>\n    )\n  }\n  return <div className='col-12 px-0 step-5'>\n    <div className=\"alert alert-secondary text-center text-secondary\" role=\"alert\">\n      No logs yet. Start logging your time now!\n    </div>\n  </div>\n}\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport EntriesList from './EntriesList/EntriesList';\n\nimport '../styles/timer.scss';\nexport default function Timer({ db }) {\n  const [milliSeconds, setMilliSeconds] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const [title, setTitle] = useState('');\n  const [entries, setEntries] = useState([]);\n  const [startTime, setStartTime] = useState(new Date());\n  // const [endTime, setEndTime] = useState(new Date());\n\n  function toggle() {\n    if (!isActive) {\n      setStartTime(new Date());\n    }\n    setIsActive(!isActive);\n  }\n\n  function stop() {\n    // setIsActive(false);\n    save()\n  }\n\n  function reset(fromStop) {\n    if (fromStop === true) {\n      setSeconds(0);\n      setMilliSeconds(0);\n      setMinutes(0);\n      setHours(0);\n      setIsActive(false);\n      setIsStarted(false);\n      setTitle('');\n    } else {\n      const confirmReset = window.confirm('Are you sure you want to reset timer?')\n      if (confirmReset) {\n        setSeconds(0);\n        setMilliSeconds(0);\n        setMinutes(0);\n        setHours(0);\n        setIsActive(false);\n        setIsStarted(false);\n        setTitle('');\n      }\n    }\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      if(!isStarted) {\n        setIsStarted(true)\n      }\n      interval = setInterval(() => {\n        // if (milliSeconds >= 9) {\n        //   setMilliSeconds(0);\n        //   setSeconds(seconds + 1)\n          if (seconds === 59) {\n            setSeconds(0);\n            if (minutes === 59) {\n              setMinutes(0);\n              setHours(hours + 1);\n            } else {\n              setMinutes(minutes + 1);\n            }\n          } else {\n            setSeconds(seconds + 1)\n          }\n        // } else {\n        //   setMilliSeconds(milliSeconds + 1)\n        // }\n        \n      }, 1000);\n    } else if(!isActive && milliSeconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    }\n  }, [isActive, isStarted, milliSeconds, seconds, hours, minutes]);\n\n  useEffect(\n    () => {\n      // create the store\n      db.version(1).stores({ \n        timeEntries: 'id, createdAt, updatedAt, title, milliSeconds, seconds, minutes, hours, startTime, endTime'\n      });      \n\n      db.timeEntries\n      .toCollection()\n      .sortBy('createdAt')\n      .then((entries) => {\n        // console.log(entries);\n        \n        setEntries(entries);\n        // this.setState({ entries });\n      });\n\n\n      // close the database connection if form is unmounted or the\n      // database connection changes\n      return () => db.close()\n    },\n    // run effect whenever the database connection changes\n    [db]\n  )\n  // sets the name in the store and in the state hook\n  const setItem = id => value => {\n    const entry = {\n      id,\n      ...value,\n      createdAt: new Date()\n    }\n    // update the store\n    db.timeEntries.put(entry).then((id) => {\n      const newList = [...entries, entry ];\n      setEntries(newList)\n    });\n    reset(true);\n    // update the state hook\n    // setNames(prevNames => ({ ...prevNames, [id]: value }))\n  }\n\n  const padZero = (n) => {\n    return String('00' + n).slice(-2);\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value);\n  }\n\n  const save = (e) => {\n    setItem(uuidv4())({\n      title,\n      milliSeconds,\n      seconds,\n      minutes,\n      hours,\n      startTime,\n      endTime: new Date()\n    });\n    \n  }\n\n  const handleDeleteEntry = (id) => {\n    db.table('timeEntries')\n      .delete(id)\n      .then(() => {\n        const newList = entries.filter((entry) => entry.id !== id);\n        setEntries(newList);\n      });\n  }\n\n  const handleEditEntry = (id, update) => {\n    db.table('timeEntries')\n      .update(id, {...update, updatedAt: new Date()})\n      .then(() => {\n        const entryToUpdate = entries.find((entry) => entry.id === id);\n        const newList = [\n          ...entries.filter((entry) => entry.id !== id),\n          Object.assign({}, entryToUpdate, update)\n        ];\n        setEntries(newList);\n        // console.log(newList);\n        \n      });\n  }\n\n  // const handleSubmit = e => {\n  //   e.preventDefault()\n  //   // setItem('firstname')(names.firstname)\n  //   // setItem('lastname')(names.lastname)\n\n  // }\n\n  return (\n    <div className='row d-flex align-items-center'>\n    <div className='current-entry d-flex align-items-center col-12 p-0 my-5'>\n      <div className='col pl-0'>\n        <input \n          type='text'\n          className='form-control step-1'\n          id='title'\n          placeholder='What are you working on?'\n          value={title}\n          onChange={onChangeTitle}/>\n      </div>\n      <div className='row'>\n        <button className='btn btn-primary mr-3 ml-4 d-flex align-items-center step-2' onClick={toggle}>\n          {isActive ? \n          <i className='material-icons-round'>\n            pause\n          </i>\n          : \n          <i className='material-icons-round'>\n            play_arrow\n          </i>}\n        </button>\n        {\n          isActive || !isStarted ? \n          <button disabled={!isStarted} className='btn btn-danger mr-3 d-flex align-items-center step-3' onClick={stop}>\n            <i className='material-icons-round'>\n              stop\n            </i>\n          </button>\n          :\n          <button className='btn btn-success py-0 mr-3 d-flex align-items-center' onClick={save}>\n            <i className='material-icons-round'>\n              save\n            </i>\n          </button>\n        }\n      </div>\n      <div className='timer d-flex align-items-center step-4'>\n        <div className='time'>\n          {padZero(hours)}:{padZero(minutes)}:{padZero(seconds)}\n          {/* .{padZero(milliSeconds)} */}\n        </div>\n        {isStarted ? \n          <button className='btn m-0 btn-delete' onClick={reset}>\n            <i className='material-icons-round d-flex'>\n            delete\n            </i>\n          </button>\n        : null}\n      </div>\n    </div>\n\n      \n      {db ? \n      <EntriesList entries={entries} handleDeleteEntry={handleDeleteEntry} handleEditEntry={handleEditEntry}/>\n      : null}\n    </div>\n  );\n}\n","import React, { Component } from 'react'\nimport Dexie from 'dexie'\nimport '../styles/app.scss';\n\nimport TutorialComponent from './Tutorial/TutorialComponent'\n// import Form from './Form'\nimport Timer from './Timer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=''>\n        <TutorialComponent />\n        <nav className=\"navbar navbar-light bg-primary\">\n          <div className='container'>\n            <a className=\"navbar-brand d-flex step-0\" href=\"/\">\n              <img src={`${process.env.PUBLIC_URL}/timely-logo.svg`} height=\"30\" alt=\"\" loading=\"lazy\"/>\n            </a>\n          </div>\n        </nav>\n        <div className='container'>\n          <Timer db={new Dexie('TimelyDatabase')}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.register()"],"sourceRoot":""}