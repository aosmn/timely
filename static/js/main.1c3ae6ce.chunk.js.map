{"version":3,"sources":["Components/TimeInput.js","Components/DurationSelector.js","Helpers/TimerHelpers.js","Components/EntriesList/EntryItem.js","Components/EntriesList/EntriesList.js","Components/Timer.js","Components/App.js","serviceWorker.js","index.js"],"names":["Component","DurationSelector","props","context","onChangeText","e","value","target","values","split","seconds","id","parseInt","pop","minutes","hours","duration","console","log","splitDuration","state","regexp","test","setState","endTime","moment","startTime","add","_d","onChange","onBlur","padZero","durationInSeconds","durationInMinutes","getDuration","diff","onChangeStartTime","date","onChangeEndTime","saveDuration","n","String","slice","entry","Date","this","onCancel","trigger","onClick","className","type","position","on","close","disableClock","calendarIcon","clearIcon","maxDetail","maxDate","subtract","minDate","EntryItem","handleDeleteEntry","handleEditEntry","useState","title","setTitle","setStartTime","setEndTime","setSeconds","setMinutes","setHours","isEditTitle","setIsEditTitle","isEditDuration","setIsEditDuration","titleInput","useEffect","focus","key","placeholder","onKeyUp","which","update","data-id","ref","input","format","milliSeconds","window","confirm","dataset","EntriesList","entries","length","entriesList","map","Timer","db","setMilliSeconds","isActive","setIsActive","isStarted","setIsStarted","setEntries","reset","fromStop","interval","setInterval","clearInterval","version","stores","timeEntries","toCollection","sortBy","then","save","uuidv4","createdAt","put","newList","disabled","class","table","delete","filter","updatedAt","entryToUpdate","find","Object","assign","App","handleJoyrideCallback","data","status","STATUS","FINISHED","SKIPPED","includes","localStorage","setItem","steps","content","getItem","continuous","callback","disableOverlayClose","showProgress","showSkipButton","href","src","height","alt","loading","Dexie","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1c3ae6ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport '../styles/durationInput.scss';\n\nclass TimeInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startTime: props.entry.startTime || new Date(),\n      endTime: props.entry.endTime || new Date(),\n      regexp : /^[0-9\\b]+$/,\n      seconds: props.entry.seconds,\n      minutes: props.entry.minutes,\n      hours: props.entry.hours\n    }\n  }\n\n  onChangeText = (e) => {\n    // console.log(e.target.id);\n\n    let value = e.target.value;\n    const id = e.target.id;\n    if ((id === 'seconds' || id === 'minutes') && parseInt(value) > 59) {\n      value = 59\n    }\n    if (value === '' || this.state.regexp.test(value)) {\n      this.setState({ [id]: value }, () => {\n        this.props.onChange({\n          seconds: this.state.seconds,\n          minutes: this.state.minutes,\n          hours: this.state.hours\n        })\n\n      })\n    }\n    // this.setState(value)\n  }\n  onBlur = e => {\n    let value = e.target.value;\n    const id = e.target.id;\n    if(value === '') {\n      value = 0;\n      this.setState({ [id]: value }, () => {\n        this.props.onChange({\n          seconds: this.state.seconds,\n          minutes: this.state.minutes,\n          hours: this.state.hours\n        })\n      })\n    }\n  }\n  render() {\n    return (\n      <div className='duration-picker-container d-flex align-items-center'>\n        <div className='form-group d-flex flex-row align-items-center mb-0'>\n          <input type='text' className='form-control time-input-part' id='hours' maxLength='2' pattern='[\\d]{9}' value={this.state.hours} onChange={this.onChangeText} onBlur={this.onBlur} />\n          :\n          <input type='text' className='form-control time-input-part' id='minutes' maxLength='2' pattern='[\\d]{9}' value={this.state.minutes} onChange={this.onChangeText} onBlur={this.onBlur} />\n          :\n          <input type='text' className='form-control time-input-part' id='seconds' maxLength='2' pattern='[\\d]{9}' value={this.state.seconds} onChange={this.onChangeText} onBlur={this.onBlur} />\n        </div>\n        <button className='btn btn-secondary d-flex px-2 ml-2' onClick={this.props.saveDuration}>\n          <i className='material-icons-round'>\n            save\n          </i>\n        </button>\n        <button className='btn btn-link text-dark d-flex p-0' onClick={this.props.onCancel}>\n          <i className='material-icons-round'>\n            close\n          </i>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default TimeInput;","import React, { Component } from 'react';\nimport '../styles/popup.scss';\nimport Popup from 'reactjs-popup';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\n\nclass DurationSelector extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      startTime: props.entry.startTime || new Date(),\n      endTime: props.entry.endTime || new Date(),\n      regexp : /^[0-9\\:\\b]+$/,\n      seconds: props.entry.seconds,\n      minutes: props.entry.minutes,\n      hours: props.entry.hours,\n      duration: `${this.padZero(props.entry.hours)}:${this.padZero(props.entry.minutes)}:${this.padZero(props.entry.seconds)}`\n    }\n  }\n\n  onChangeText = (e) => {\n\n    const value = e.target.value;\n    const values = value.split(':')\n    const id = e.target.id;\n    const seconds = parseInt(values.pop(), 10) || 0;\n    const minutes = parseInt(values.pop(), 10) || 0;\n    const hours = parseInt(values.pop(), 10) || 0;\n    let duration = hours*60*60 + minutes*60 + seconds;\n    \n    console.log(hours, minutes, seconds);\n\n    duration = this.splitDuration(duration);\n    // if ((id === 'seconds' || id === 'minutes') && parseInt(value) > 59) {\n    //   value = 59\n    // }\n    if (value === '' || this.state.regexp.test(value)) {\n      this.setState({ \n        duration: value,\n        hours: duration.hours,\n        minutes: duration.minutes,\n        seconds: duration.seconds,\n        endTime: moment(this.state.startTime).add(duration, 'seconds')._d\n      }, () => {\n        this.props.onChange({\n          seconds: this.state.seconds,\n          minutes: this.state.minutes,\n          hours: this.state.hours,\n          startTime: this.state.startTime,\n          endTime: this.state.startTime\n        })\n\n      })\n    }\n    // this.setState(value)\n  }\n\n  onBlur = e => {\n    const value = e.target.value;\n    const values = value.split(':')\n    const id = e.target.id;\n    const seconds = parseInt(values.pop(), 10) || 0;\n    const minutes = parseInt(values.pop(), 10) || 0;\n    const hours = parseInt(values.pop(), 10) || 0;\n    let duration = hours*60*60 + minutes*60 + seconds;\n    \n    console.log(hours, minutes, seconds);\n\n    duration = this.splitDuration(duration);\n    // if ((id === 'seconds' || id === 'minutes') && parseInt(value) > 59) {\n    //   value = 59\n    // }\n    if (value === '' || this.state.regexp.test(value)) {\n      this.setState({ \n        duration: `${this.padZero(duration.hours)}:${this.padZero(duration.minutes)}:${this.padZero(duration.seconds)}`,\n      });\n    }\n  }\n\n  splitDuration = (durationInSeconds) => {\n    const seconds = durationInSeconds%60;\n    const durationInMinutes = (durationInSeconds-seconds)/60;\n    const minutes = durationInMinutes%60;\n    const hours = (durationInMinutes-minutes)/60;\n\n    return {seconds, minutes, hours};\n  }\n  \n  getDuration = (startTime, endTime) => {    \n    const duration = moment(endTime).diff(moment(startTime), 'seconds');\n    \n    // const seconds = duration%60;\n    // const durationInMinutes = (duration-seconds)/60;\n    // const minutes = durationInMinutes%60;\n    // const hours = (durationInMinutes-minutes)/60;\n    const {hours, minutes, seconds} = this.splitDuration(duration);\n    this.setState({\n      seconds,\n      minutes,\n      hours,\n      duration: `${this.padZero(hours)}:${this.padZero(minutes)}:${this.padZero(seconds)}`\n\n    }, () => {\n        this.props.onChange({\n          seconds: this.state.seconds,\n          minutes: this.state.minutes,\n          hours: this.state.hours,\n          startTime: this.state.startTime,\n          endTime: this.state.endTime\n        })\n\n      })\n\n    // let hours = Math.floor(duration / (60*60));\n    // let minutes = duration - \n\n  }\n\n  onChangeStartTime = (date) => {\n    this.setState({startTime: date})\n    this.getDuration(date, this.state.endTime)\n  }\n\n  onChangeEndTime = (date) => {\n    this.setState({endTime: date})\n    this.getDuration(this.state.startTime, date)\n  }\n\n  saveDuration = () => {\n    this.props.saveDuration({\n      seconds: this.state.seconds,\n      minutes: this.state.minutes,\n      hours: this.state.hours,\n      startTime: this.state.startTime,\n      endTime: this.state.endTime\n    });\n  }\n  \n  padZero = (n) => {\n    return String('00' + n).slice(-2);\n  }\n  render() {\n    const {trigger, entry, onCancel, onClick} = this.props;\n\n    return (\n          <div className='duration-picker-container d-flex align-items-center'>\n            <div className='form-group d-flex flex-row align-items-center mb-0'>\n            <Popup\n              trigger = {\n                <input\n                  type='text'\n                  className='form-control time-input-part'\n                  id='duration'\n                  value={this.state.duration}\n                  onChange={this.onChangeText}\n                  onBlur={this.onBlur}\n                  />\n\n              }\n              position='bottom center'\n              on='focus'\n              >\n              {close => (\n                <div className='d-flex'>\n                  <div className='d-flex flex-column'>\n                    <label className='text-secondary text-left'><small>From</small></label>\n                    <DateTimePicker\n                      onChange={this.onChangeStartTime}\n                      value={this.state.startTime}\n                      disableClock={true}\n                      calendarIcon={null}\n                      clearIcon={null}\n                      maxDetail='second'\n                      maxDate={moment(this.state.endTime).subtract({seconds: 1})._d}\n                      className='mr-3'\n                    />\n                  </div>\n                  <div className='d-flex flex-column'>\n                    <label className='text-secondary text-left'><small>To</small></label>\n                  \n                  <DateTimePicker\n                    onChange={this.onChangeEndTime}\n                    value={this.state.endTime}\n                    disableClock={true}\n                    calendarIcon={null}\n                    clearIcon={null}\n                    maxDetail='second'\n                    minDate={moment(this.state.startTime).add({seconds: 1})._d}\n                  />\n                </div>\n                </div>\n              )}\n            </Popup>\n            </div>\n            <button className='btn btn-secondary d-flex px-2 ml-2' onClick={this.saveDuration}>\n              <i className='material-icons-round'>\n                save\n              </i>\n            </button>\n            <button className='btn btn-link text-dark d-flex p-0' onClick={onCancel}>\n              <i className='material-icons-round'>\n                close\n              </i>\n            </button>\n          </div>\n      \n    );\n  }\n}\n\nexport default DurationSelector;","export const padZero = (n) => {\n  return String('00' + n).slice(-2);\n}","import React, { useEffect, useState } from 'react';\nimport TimeInput from '../TimeInput';\nimport moment from 'moment';\nimport Duration from '../DurationSelector';\nimport {padZero} from '../../Helpers/TimerHelpers'\n\nexport default function EntryItem({entry, handleDeleteEntry, handleEditEntry}) {\n  const [title, setTitle] = useState(entry.title);\n  const [startTime, setStartTime] = useState(entry.startTime);\n  const [endTime, setEndTime] = useState(entry.endTime);\n  const [seconds, setSeconds] = useState(entry.seconds);\n  const [minutes, setMinutes] = useState(entry.minutes);\n  const [hours, setHours] = useState(entry.hours);\n  const [isEditTitle, setIsEditTitle] = useState(false);\n  const [isEditDuration, setIsEditDuration] = useState(false);\n\n  let titleInput = null;\n  let startTimeInput = null;\n  let endTimeInput = null;\n  // const [whichEntry, setWhichEntry] = useState('');\n\n  const deleteEntry = (e) => {  \n    const result = window.confirm('Are you sure you want to delete this entry?');\n    if (result) {\n      handleDeleteEntry(e.target.dataset.id);\n      \n    }\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value);\n  }\n\n  const onClickTitle = (e) => {\n    setIsEditTitle(true)\n    // setWhichEntry(e.target.dataset.id)\n  }\n\n  const onBlurTitle = (e) => {\n    setIsEditTitle(false);\n    let update = { title: e.target.value };\n\n    handleEditEntry(entry.id, update)\n    titleInput = null;\n    \n  }\n\n  useEffect(() => {   \n    if (titleInput) {\n      titleInput.focus();\n    }\n  }, [titleInput, isEditTitle]);\n\n  const onKeyUp = (e) => {\n    if (e.which === 13) {\n      setIsEditTitle(false);\n      let update = { title: e.target.value };\n      handleEditEntry(entry.id, update)\n      titleInput = null;\n    }    \n  }\n\n  const onChangeStartTime = (date) => {\n    setStartTime(date)\n  }\n\n  const onChangeEndTime = (date) => {\n    setEndTime(date)\n  }\n\n  const onClickDuration = (e) => {\n    setIsEditDuration(true);\n  }\n  const saveDuration = (value) => {\n    setIsEditDuration(false);    \n    handleEditEntry(entry.id, { seconds: value.seconds, minutes: value.minutes, hours: value.hours, startTime: value.startTime, endTime: value.endTime })\n  }\n  const changeDuration = (value) => {\n    const {seconds, minutes, hours, startTime, endTime} = value;\n    setSeconds(seconds);\n    setMinutes(minutes);\n    setHours(hours);\n    setStartTime(startTime);\n    setEndTime(endTime);\n  }\n  return (\n    <li key={entry.id} className='list-group-item list-group-item-action d-flex justify-content-between align-items-center'>\n      <div className='d-flex'>\n        {isEditTitle ? \n          <div className='form-group mb-0'>\n            <input type='text' className='form-control' id='entryTitle' placeholder='No title' value={title} \n            onChange={onChangeTitle}\n            onKeyUp={onKeyUp}\n            onBlur={onBlurTitle}\n            data-id={entry.id}\n            ref={(input) => { titleInput = input; }} />\n          </div>\n        : \n          (\n            <div onClick={onClickTitle}>\n              {entry.title || 'No title'}\n              <small className='ml-3'>{moment(startTime).format('ddd MMM D, hh:mm:ssa')} - {moment(endTime).format('ddd MMM D, hh:mm:ssa')}</small>\n            </div>\n          )\n        }\n      </div>\n      <div className='d-flex flex-row align-items-center'>\n        <div className='duration d-flex align-items-center'>\n          {isEditDuration ? \n            <>\n              <Duration entry={entry} onChange={changeDuration} saveDuration={saveDuration} onCancel={() => {setIsEditDuration(false)}}/>\n            </>\n          \n          :\n          <small className='text-secondary mr-3' onClick={onClickDuration}>\n            {padZero(entry.hours)}:{padZero(entry.minutes)}:{padZero(entry.seconds)}.{padZero(entry.milliSeconds)}\n          </small>\n          }\n        </div>\n        <button className='btn btn-danger d-flex align-items-center' onClick={deleteEntry} data-id={entry.id}>\n          <i className='material-icons-round' data-id={entry.id}>\n            delete\n          </i>\n        </button>\n      </div>\n    </li>\n  )\n};","import React, { Component } from 'react';\nimport EntryItem from './EntryItem'\n\nexport default function EntriesList({ entries, handleDeleteEntry, handleEditEntry }) {\n  const padZero = (n) => {\n    return String('00' + n).slice(-2);\n  }\n\n  if (entries && entries.length > 0) {\n    \n  const entriesList = entries.map(entry => {    \n    return <EntryItem key={entry.id} padZero={padZero} entry={entry} handleDeleteEntry={handleDeleteEntry} handleEditEntry={handleEditEntry}/>\n  })\n\n  return (\n    <ul className='list-group col-12 pr-0 step-5 '>\n      {entriesList}\n    </ul>\n  )\n  }\n  return null\n}\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport EntriesList from './EntriesList/EntriesList';\n\nimport '../styles/timer.scss';\nexport default function Timer({ db }) {\n  const [milliSeconds, setMilliSeconds] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const [title, setTitle] = useState('');\n  const [entries, setEntries] = useState([]);\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n\n  function toggle() {\n    if (!isActive) {\n      setStartTime(new Date());\n    }\n    setIsActive(!isActive);\n  }\n\n  function stop() {\n    // setIsActive(false);\n    save()\n  }\n\n  function reset(fromStop) {\n    if (fromStop === true) {\n      setSeconds(0);\n      setMilliSeconds(0);\n      setMinutes(0);\n      setHours(0);\n      setIsActive(false);\n      setIsStarted(false);\n      setTitle('');\n    } else {\n      const confirmReset = window.confirm('Are you sure you want to reset timer?')\n      if (confirmReset) {\n        setSeconds(0);\n        setMilliSeconds(0);\n        setMinutes(0);\n        setHours(0);\n        setIsActive(false);\n        setIsStarted(false);\n        setTitle('');\n      }\n    }\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      if(!isStarted) {\n        setIsStarted(true)\n      }\n      interval = setInterval(() => {\n        // if (milliSeconds >= 9) {\n        //   setMilliSeconds(0);\n        //   setSeconds(seconds + 1)\n          if (seconds === 59) {\n            setSeconds(0);\n            if (minutes === 59) {\n              setMinutes(0);\n              setHours(hours + 1);\n            } else {\n              setMinutes(minutes + 1);\n            }\n          } else {\n            setSeconds(seconds + 1)\n          }\n        // } else {\n        //   setMilliSeconds(milliSeconds + 1)\n        // }\n        \n      }, 1000);\n    } else if(!isActive && milliSeconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    }\n  }, [isActive, isStarted, milliSeconds, seconds, hours, minutes]);\n\n  useEffect(\n    () => {\n      // create the store\n      db.version(1).stores({ \n        timeEntries: 'id, createdAt, updatedAt, title, milliSeconds, seconds, minutes, hours, startTime, endTime'\n      });      \n\n      db.timeEntries\n      .toCollection()\n      .sortBy('createdAt')\n      .then((entries) => {\n        // console.log(entries);\n        \n        setEntries(entries);\n        // this.setState({ entries });\n      });\n\n\n      // close the database connection if form is unmounted or the\n      // database connection changes\n      return () => db.close()\n    },\n    // run effect whenever the database connection changes\n    [db]\n  )\n  // sets the name in the store and in the state hook\n  const setItem = id => value => {\n    const entry = {\n      id,\n      ...value,\n      createdAt: new Date()\n    }\n    // update the store\n    db.timeEntries.put(entry).then((id) => {\n      const newList = [...entries, entry ];\n      setEntries(newList)\n    });\n    reset(true);\n    // update the state hook\n    // setNames(prevNames => ({ ...prevNames, [id]: value }))\n  }\n\n  const padZero = (n) => {\n    return String('00' + n).slice(-2);\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value);\n  }\n\n  const save = (e) => {\n    setItem(uuidv4())({\n      title,\n      milliSeconds,\n      seconds,\n      minutes,\n      hours,\n      startTime,\n      endTime: new Date()\n    });\n    \n  }\n\n  const handleDeleteEntry = (id) => {\n    db.table('timeEntries')\n      .delete(id)\n      .then(() => {\n        const newList = entries.filter((entry) => entry.id !== id);\n        setEntries(newList);\n      });\n  }\n\n  const handleEditEntry = (id, update) => {\n    db.table('timeEntries')\n      .update(id, {...update, updatedAt: new Date()})\n      .then(() => {\n        const entryToUpdate = entries.find((entry) => entry.id === id);\n        const newList = [\n          ...entries.filter((entry) => entry.id !== id),\n          Object.assign({}, entryToUpdate, update)\n        ];\n        setEntries(newList);\n        // console.log(newList);\n        \n      });\n  }\n\n  // const handleSubmit = e => {\n  //   e.preventDefault()\n  //   // setItem('firstname')(names.firstname)\n  //   // setItem('lastname')(names.lastname)\n\n  // }\n\n  return (\n    <div className='row d-flex align-items-center'>\n    <div className='current-entry d-flex align-items-center col-12 p-0 my-5'>\n      <div className='col pl-0'>\n        <input \n          type='text'\n          className='form-control step-1'\n          id='title'\n          placeholder='What are you working on?'\n          value={title}\n          onChange={onChangeTitle}/>\n      </div>\n      <div className='row'>\n        <button className='btn btn-primary mr-3 ml-4 d-flex align-items-center step-2' onClick={toggle}>\n          {isActive ? \n          <i className='material-icons-round'>\n            pause\n          </i>\n          : \n          <i className='material-icons-round'>\n            play_arrow\n          </i>}\n        </button>\n        {\n          isActive || !isStarted ? \n          <button disabled={!isStarted} className='btn btn-danger mr-3 d-flex align-items-center step-3' onClick={stop}>\n            <i className='material-icons-round'>\n              stop\n            </i>\n          </button>\n          :\n          <button className='btn btn-success py-0 mr-3 d-flex align-items-center' onClick={save}>\n            <i className='material-icons-round'>\n              save\n            </i>\n          </button>\n        }\n      </div>\n      <div className='timer d-flex align-items-center step-4'>\n        <div className='time'>\n          {padZero(hours)}:{padZero(minutes)}:{padZero(seconds)}\n          {/* .{padZero(milliSeconds)} */}\n        </div>\n        {isStarted ? \n          <button className='btn m-0 btn-delete' onClick={reset}>\n            <i class='material-icons-round d-flex'>\n            delete\n            </i>\n          </button>\n        : null}\n      </div>\n    </div>\n\n      \n      {db ? \n      <EntriesList entries={entries} handleDeleteEntry={handleDeleteEntry} handleEditEntry={handleEditEntry}/>\n      : null}\n    </div>\n  );\n}\n","import React, { Component } from 'react'\nimport Dexie from 'dexie'\nimport '../styles/app.scss';\n\n// import Form from './Form'\nimport Timer from './Timer';\nimport Joyride, { STATUS } from 'react-joyride';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      steps: [\n        {\n          target: '.step-0',\n          content: 'Timely is a time logging app. Let\\'s get productive!',\n        },\n        {\n          target: '.step-1',\n          content: 'Enter the title of the task you\\'re currently working on',\n        },\n        {\n          target: '.step-2',\n          content: 'Start the timer',\n        },\n        {\n          target: '.step-3',\n          content: 'Stop the timer',\n        },\n        {\n          target: '.step-4',\n          content: 'Timer duration is shown here',\n        },\n        {\n          target: '.step-5',\n          content: 'Your time entries will be shown here',\n        },\n      ]\n    };\n  }\n  handleJoyrideCallback = data => {\n    const { status } = data;\n\n    if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n      window.localStorage.setItem('tutorialDone', true)\n    }\n  };\n  render() {\n    const { steps } = this.state;\n    return (\n      <div className=''>\n\n        {\n          window.localStorage.getItem('tutorialDone') ? null :\n          <Joyride\n            steps={steps}\n            continuous={true}\n            callback={this.handleJoyrideCallback}\n            disableOverlayClose={true}\n            showProgress={true}\n            showSkipButton={true}\n            // spotlightClicks={true}\n          />\n        }\n        <nav class=\"navbar navbar-light bg-primary\">\n          <div className='container'>\n            <a class=\"navbar-brand d-flex step-0\" href=\"#\">\n              <img src=\"timely-logo.svg\" height=\"30\" alt=\"\" loading=\"lazy\"/>\n            </a>\n          </div>\n        </nav>\n        <div className='container'>\n          <Timer db={new Dexie('TimelyDatabase')}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.register()"],"sourceRoot":""}